# Generated by Django 4.0.6 on 2022-08-08 15:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('settings', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('populationnumber', models.IntegerField(blank=True, db_column='populationNumber', null=True)),
                ('childrennumber', models.IntegerField(blank=True, db_column='childrenNumber', null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('coverage', models.IntegerField(blank=True, db_column='Coverage', null=True)),
                ('coverage1', models.IntegerField(blank=True, db_column='Coverage1', null=True)),
                ('province', models.CharField(blank=True, db_column='province', max_length=50, null=True)),
                ('district', models.CharField(blank=True, max_length=50, null=True)),
                ('zone', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='postalCode', max_length=12, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('gpsCordinate', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('haveinternet', models.BooleanField(blank=True, db_column='haveInternet', null=True)),
                ('ownership', models.CharField(blank=True, max_length=50, null=True)),
                ('roadtype', models.CharField(blank=True, db_column='roadType', max_length=50, null=True)),
                ('climate', models.IntegerField(blank=True, null=True)),
                ('distancefromparent', models.IntegerField(blank=True, db_column='distanceFromParent', null=True)),
                ('timetoparent', models.CharField(blank=True, db_column='timeToParent', max_length=50, null=True)),
                ('receivingvaccmode', models.IntegerField(blank=True, db_column='receivingVaccMode', null=True)),
                ('haveimmservice', models.BooleanField(blank=True, db_column='HaveImmService', null=True)),
                ('typeimmservice', models.IntegerField(blank=True, db_column='TypeImmService', null=True)),
                ('numimmperweek', models.IntegerField(blank=True, db_column='NumImmperWeek', null=True)),
                ('havecovid19service', models.BooleanField(blank=True, db_column='HaveCovid19Service', null=True)),
                ('countvacc1', models.IntegerField(blank=True, db_column='countVacc1', null=True)),
                ('countvacc2', models.IntegerField(blank=True, db_column='countVacc2', null=True)),
                ('other1', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('other2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('other3', models.BooleanField(blank=True, null=True)),
                ('other4', models.BooleanField(blank=True, null=True)),
                ('other5', models.CharField(blank=True, max_length=100, null=True)),
                ('other6', models.CharField(blank=True, max_length=100, null=True)),
                ('transportmode', models.IntegerField(blank=True, db_column='transportMode', null=True)),
                ('startwork', models.CharField(blank=True, db_column='startWork', max_length=50, null=True)),
                ('endwork', models.CharField(blank=True, db_column='endWork', max_length=50, null=True)),
                ('staffnumber', models.IntegerField(blank=True, db_column='staffNumber', null=True)),
                ('numprofstaff', models.IntegerField(blank=True, db_column='NumProfStaff', null=True)),
                ('numvaccstaff', models.IntegerField(blank=True, db_column='NumVaccStaff', null=True)),
                ('numdriverstaff', models.IntegerField(blank=True, db_column='NumDriverStaff', null=True)),
                ('powersource', models.IntegerField(blank=True, db_column='powerSource', null=True)),
                ('havegenerator', models.BooleanField(blank=True, db_column='HaveGenerator', null=True)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('functionstatus', models.IntegerField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=500, null=True)),
                ('completerstaffsign', models.CharField(blank=True, db_column='completerStaffSign', max_length=50, null=True)),
                ('completerstaffname', models.ForeignKey(blank=True, db_column='completerStaff', max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='settings.countryconfig')),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='settings.levelconfig')),
                ('parentid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='facilities.facility')),
            ],
            options={
                'db_table': 'Facility',
            },
        ),
    ]
